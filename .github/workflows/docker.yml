name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: javame-auth-api

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK environment
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build the Spring Boot application
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build & Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t 2aid/javame-auth-api:$IMAGE_TAG .
          docker push 2aid/javame-auth-api:$IMAGE_TAG
          echo "AUTH_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Deploy the application using Docker-Compose
      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          port: 8822
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            COMPOSE_DIR="/home/aiot2/aiot2-team3/docker/javame"
            cd $COMPOSE_DIR
            
            # ① .env에 방금 빌드한 이미지 태그 기록
            if grep -q '^AUTH_IMAGE_TAG=' .env; then
             # 있으면 교체
            sed -i "s|^AUTH_IMAGE_TAG=.*|AUTH_IMAGE_TAG=${{ env.AUTH_IMAGE_TAG }}|" .env
            else
            # 없으면 추가
            echo "AUTH_IMAGE_TAG=${{ env.AUTH_IMAGE_TAG }}" >> .env
            fi
            
            docker-compose stop $SERVICE_NAME
            docker-compose rm -f $SERVICE_NAME
            docker-compose up -d $SERVICE_NAME
            

